
// This is a personal academic project. Dear PVS-Studio, please check it.
// PVS-Studio Static Code Analyzer for C, C++, C#, and Java: https://pvs-studio.com

package juliet.testcases.CWE601_Open_Redirect;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class ServletMain extends HttpServlet {

	private static final long serialVersionUID = 1L; /* needed since Servlets are serializable */
	
	

	public void doPost(HttpServletRequest request, HttpServletResponse response) {
		doGet(request, response);
	}

	public void doGet(HttpServletRequest request, HttpServletResponse response) {
		doGetCWE1(request, response);
		doGetCWE2(request, response);
		doGetCWE3(request, response);
		doGetCWE4(request, response);
		doGetCWE5(request, response);
		doGetCWE6(request, response);
		doGetCWE7(request, response);
		doGetCWE8(request, response);
		doGetCWE9(request, response);
	}
	
	private static void doGetCWE1(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-1 */

			/* END-AUTOGENERATED-SERVLET-TESTS-1 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE1 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}
		
	private static void doGetCWE2(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-2 */

			/* END-AUTOGENERATED-SERVLET-TESTS-2 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE2 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}
		
	private static void doGetCWE3(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-3 */

			/* END-AUTOGENERATED-SERVLET-TESTS-3 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE3 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}

	private static void doGetCWE4(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-4 */

			/* END-AUTOGENERATED-SERVLET-TESTS-4 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE4 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}
		
	private static void doGetCWE5(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-5 */

			/* END-AUTOGENERATED-SERVLET-TESTS-5 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE5 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {

				System.out.println("  " + ste.toString());
			} 
		}
	}		
		
	private static void doGetCWE6(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-6 */
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_01()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_02()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_03()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_04()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_05()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_06()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_07()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_08()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_09()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_10()).runTest(request, response);
		
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_01()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_02()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_03()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_04()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_05()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_06()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_07()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_08()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_09()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_database_10()).runTest(request, response);
			
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_01()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_02()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_03()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_04()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_05()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_06()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_07()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_08()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_09()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_File_10()).runTest(request, response);
			
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_01()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_02()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_03()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_04()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_05()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_06()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_07()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_08()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_09()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookies_Servlet_10()).runTest(request, response);
			
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_01()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_02()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_03()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_04()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_05()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_06()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_07()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_08()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_09()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameter_Servlet_10()).runTest(request, response);
			
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_01()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_02()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_03()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_04()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_05()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_06()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_07()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_08()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_09()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryString_Servlet_10()).runTest(request, response);
		
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_01()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_02()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_03()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_04()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_05()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_06()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_07()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_08()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_09()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_10()).runTest(request, response);
		
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_01()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_02()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_03()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_04()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_05()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_06()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_07()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_08()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_09()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_PropertiesFile_10()).runTest(request, response);
			
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_01()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_02()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_03()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_04()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_05()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_06()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_07()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_08()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_09()).runTest(request, response);
			(new juliet.testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_URLConnection_10()).runTest(request, response);
			
			/* END-AUTOGENERATED-SERVLET-TESTS-6 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE6 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}

	private static void doGetCWE7(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-7 */

			/* END-AUTOGENERATED-SERVLET-TESTS-7 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE7 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}		
	
	private static void doGetCWE8(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-8 */

			/* END-AUTOGENERATED-SERVLET-TESTS-8 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE8 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}	
	
	private static void doGetCWE9(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-9 */

			/* END-AUTOGENERATED-SERVLET-TESTS-9 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE9 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}		
}
