name: CI

on: push

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build
        run: ./gradlew build --stacktrace --scan


  # sonar:
  #   needs: build-linux
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Docker Compose
  #       run: |
  #           sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  #           sudo chmod +x /usr/local/bin/docker-compose
  #           docker-compose --version

  #     - name: Run Sonar Scanner
  #       run: docker-compose run --rm sonar-scanner 
        
  pvs:
    needs: build-linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build PVS-Studio image
        run: |
          docker build -t viva64/pvs-studio:7.36 . 

      - name: Set up Docker Compose
        run: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version

      - name: Start PVS-Studio container and analyze
        run: |
          docker-compose run --rm pvs-analyzer 

      - name: Upload PVS-Studio HTML report
        uses: actions/upload-artifact@v4
        with:
          name: report-html
          path: ./reports/index.html

      - name: List generated report files
        run: ls -R ./reports

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0.0
        with:
          publish-dir: './reports'
          production-branch: master
          deploy-message: '${{  github.event.head_commit.message }}'
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
